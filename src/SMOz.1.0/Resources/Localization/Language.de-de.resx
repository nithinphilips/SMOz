<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutContributorsFormat" xml:space="preserve">
    <value>{0} v{1}

Dieses Programm wird von den folgenden Mitwirkenden ermöglicht:
     Magic Control Library 1.7.4.0:  Phil Wright &lt;http://www.dotnetmagic.com/&gt;
     XPTable: Mathew Hall &lt;http://www.codeproject.com/cs/miscctrl/XPTable.asp&gt;
     EXListView: Michiel van Eerd &lt;http://www.webessence.nl/&gt;
     SysIconList: vbAccelerator &lt;http://vbaccelerator.com/&gt;

The default template includes contributions from:
     Matt Bentley &lt;soulstudios@orcon.net.nz&gt;

The author would like to thank the following users for their generous financial support of the project:
     Ted Balaban &lt;tsbalaban@yahoo.com&gt;

Screenshots und Ikone dieser Sichtart des Programmeigenschaft „Luna Element-5“ durch Tornado 5
     &lt;http://www.deviantart.com/deviation/28246317&gt;</value>
  </data>
  <data name="AboutLicense" xml:space="preserve">
    <value>Diese Übersetzung wird mit der Absicht angeboten, das Verständnis der GNU General Public License (GNU GPL) zu erleichtern. Es handelt sich jedoch nicht um eine offizielle oder im rechtlichen Sinne anerkannte Übersetzung.

SEE COPYING for English version.
 
Dieses Programm ist freie Software. Sie können es unter den Bedingungen der GNU General Public License, wie von der Free Software Foundation veröffentlicht, weitergeben und/oder modifizieren, entweder gemäß Version 2 der Lizenz oder (nach Ihrer Option) jeder späteren Version.

Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen von Nutzen sein wird, aber OHNE IRGENDEINE GARANTIE, sogar ohne die implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN BESTIMMTEN ZWECK. Details finden Sie in der GNU General Public License.

Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem Programm erhalten haben. Falls nicht, schreiben Sie an die Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110, USA. </value>
  </data>
  <data name="AboutVersionFormat" xml:space="preserve">
    <value>{0} v {1}  
Geschrieben durch Nithin Philips &lt;spikiermonkey@users.sourceforge.net&gt;.    

Copyright (C) 2004-2006 Nithin Philips.
Dieses ist freie Software; Es gibt KEINE Garantie  nicht für MARKTGÄNGIGKEIT oder EIGNUNG ZU EINEM BESTIMMTEN ZWECK glätten.    

Die COPYING im Anwendung Verzeichnis lesen oder http://www.gnu.org/copyleft/gpl.html für mehr Info besuchen. </value>
  </data>
  <data name="ApplyChanges" xml:space="preserve">
    <value>Änderungen anwenden</value>
  </data>
  <data name="ApplyTemplate" xml:space="preserve">
    <value>Schablone anwenden</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Ende</value>
  </data>
  <data name="Contributors" xml:space="preserve">
    <value>Mitwirkende </value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Gelöscht </value>
  </data>
  <data name="DeleteItemsFormat" xml:space="preserve">
    <value>Löschung {0} Einzelteile</value>
  </data>
  <data name="EnteredNameIsNotValid" xml:space="preserve">
    <value>Eingetragener Name ist unzulässig</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>Lizenz</value>
  </data>
  <data name="MoveItemsFormat" xml:space="preserve">
    <value>{0} Einzelteile verschieben</value>
  </data>
  <data name="NothingSelected" xml:space="preserve">
    <value>Nichts wählte vor</value>
  </data>
  <data name="NothingToDoMessage" xml:space="preserve">
    <value>Traurig, aber es gibt nichts zu tun! </value>
  </data>
  <data name="Renamed" xml:space="preserve">
    <value>Gelöscht </value>
  </data>
  <data name="SearchResultsNodeName" xml:space="preserve">
    <value>&lt;Suchresultate&gt;</value>
  </data>
  <data name="StartMenuModifiedMessage" xml:space="preserve">
    <value>Einige Einzelteile im Anfangsmenü wurden durch eine eine andere Anwendung geändert. Das Anwenden der änderungen, die in SMOz vorgenommen werden, kann unvorhersehbaren Zustand ergeben. </value>
  </data>
  <data name="UnCategorizedNodeName" xml:space="preserve">
    <value>(leer)</value>
  </data>
  <data name="UnsavedChangesMessage" xml:space="preserve">
    <value>Es scheint, daß du unsaved änderungen hast. Möchtest du jedoch beendigen? </value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
</root>